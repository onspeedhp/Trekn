import React, { Fragment } from 'react'
import { useLocation, useNavigate } from 'react-router'

export default function Navbar() {
    const navBarList = [
        {
            name: 'home',
            path: '/',
            element: (active: boolean) => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M12 1.94531L11.4609 2.46094L1.71094 12.2109L2.78906 13.2891L3.75 12.3281V21H10.5V13.5H13.5V21H20.25V12.3281L21.2109 13.2891L22.2891 12.2109L12.5391 2.46094L12 1.94531ZM12 4.07812L18.75 10.8281V19.5H15V12H9V19.5H5.25V10.8281L12 4.07812Z" fill="black" fill-opacity={!active ? '0.7' : '1'} />
            </svg>
        },
        {
            name: 'search',
            path: '/search',
            element: (active: boolean) => <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
                <path d="M14.916 2.25C10.7822 2.25 7.41602 5.61621 7.41602 9.75C7.41602 11.5459 8.0459 13.1924 9.10352 14.4844L3.12695 20.4609L4.20508 21.5391L10.1816 15.5625C11.4736 16.6201 13.1201 17.25 14.916 17.25C19.0498 17.25 22.416 13.8838 22.416 9.75C22.416 5.61621 19.0498 2.25 14.916 2.25ZM14.916 3.75C18.2383 3.75 20.916 6.42773 20.916 9.75C20.916 13.0723 18.2383 15.75 14.916 15.75C11.5938 15.75 8.91602 13.0723 8.91602 9.75C8.91602 6.42773 11.5938 3.75 14.916 3.75Z" fill="black" fill-opacity={!active ? '0.7' : '1'} />
            </svg>
        },
        {
            name: 'award',
            path: '/award',
            element: (active: boolean) => <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
                <path d="M12.334 2.25C11.8652 2.25 11.3994 2.4082 10.998 2.69531L9.75586 3.5625L8.32617 3.75H8.30273L8.2793 3.77344C7.32422 3.9873 6.57129 4.74023 6.35742 5.69531L6.33398 5.71875V5.74219L6.14648 7.19531L5.2793 8.32031L5.25586 8.34375V8.36719C4.73145 9.20508 4.70801 10.2861 5.2793 11.0859L6.16992 12.3281L6.4043 13.6172L3.99023 17.2969L3.2168 18.4453H6.80273L7.66992 20.4609L8.20898 21.75L8.98242 20.5781L11.3496 17.0156C11.9854 17.2764 12.7031 17.2998 13.3184 17.0156L15.6855 20.5781L16.459 21.75L16.998 20.4609L17.8652 18.4453H21.4512L20.6777 17.2969L18.334 13.7344L18.5215 12.3281L19.3887 11.0859L19.4121 11.0625V11.0391C19.9365 10.2012 19.96 9.14355 19.3887 8.34375L18.5215 7.10156L18.2402 5.69531H18.2637C18.2607 5.67773 18.2432 5.66602 18.2402 5.64844C18.1055 4.66699 17.3291 3.87012 16.3418 3.75H16.3184L14.9121 3.5625L13.6699 2.69531C13.2686 2.4082 12.8027 2.25 12.334 2.25ZM12.334 3.77344C12.5068 3.77344 12.6768 3.82617 12.8027 3.91406L14.1387 4.875L14.3027 4.99219L14.4902 5.01562L16.1309 5.25H16.1543C16.4912 5.28809 16.7256 5.52246 16.7637 5.85938V5.90625L17.0684 7.57031L17.0918 7.73438L17.209 7.875L18.1699 9.21094C18.3486 9.45996 18.3721 9.88184 18.1465 10.2422L17.0918 11.7188L17.0684 11.9062L16.834 13.5469V13.5703C16.8193 13.6934 16.7783 13.8076 16.7168 13.8984L16.6699 13.9219V13.9453C16.5615 14.0742 16.4121 14.1592 16.2246 14.1797H16.1777L14.4668 14.4844L14.2793 14.5078L14.1387 14.625L12.8027 15.5859C12.5537 15.7646 12.1084 15.7881 11.748 15.5625L10.5293 14.625L10.3887 14.5078L10.1777 14.4844L8.53711 14.25H8.51367C8.28223 14.2236 8.10352 14.1035 7.99805 13.9219C7.95117 13.8398 7.91602 13.7432 7.9043 13.6406V13.5938L7.59961 11.8828L7.57617 11.6953L7.45898 11.5547L6.49805 10.2188C6.31934 9.96973 6.2959 9.52441 6.52148 9.16406L7.45898 7.94531L7.57617 7.80469L7.59961 7.59375L7.81055 6.02344C7.81348 6.01172 7.83105 6.01172 7.83398 6C7.92773 5.63379 8.21777 5.34375 8.58398 5.25C8.5957 5.24707 8.5957 5.22949 8.60742 5.22656L10.1777 5.01562L10.3652 4.99219L10.5293 4.875L11.8652 3.91406C11.9912 3.82617 12.1611 3.77344 12.334 3.77344ZM17.5137 15.1875L18.6621 16.9453H16.8574L16.6699 17.4141L16.1543 18.6094L14.5605 16.1719L14.9121 15.9141L16.3887 15.6562V15.6797C16.4062 15.6768 16.418 15.6592 16.4355 15.6562C16.8398 15.6006 17.2061 15.4307 17.5137 15.1875ZM7.1543 15.2109C7.47363 15.498 7.88086 15.6973 8.32617 15.75C8.33496 15.75 8.34082 15.75 8.34961 15.75L9.7793 15.9375L10.1074 16.1953L8.51367 18.6094L7.99805 17.4141L7.81055 16.9453H6.00586L7.1543 15.2109Z" fill="black" fill-opacity={!active ? '0.7' : '1'} />
            </svg>
        },
        {
            name: 'account',
            path: '/account',
            element: (active: boolean) => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M12 3.75C9.1084 3.75 6.75 6.1084 6.75 9C6.75 10.8076 7.67285 12.4131 9.07031 13.3594C6.39551 14.5078 4.5 17.1621 4.5 20.25H6C6 16.9277 8.67773 14.25 12 14.25C15.3223 14.25 18 16.9277 18 20.25H19.5C19.5 17.1621 17.6045 14.5078 14.9297 13.3594C16.3271 12.4131 17.25 10.8076 17.25 9C17.25 6.1084 14.8916 3.75 12 3.75ZM12 5.25C14.0801 5.25 15.75 6.91992 15.75 9C15.75 11.0801 14.0801 12.75 12 12.75C9.91992 12.75 8.25 11.0801 8.25 9C8.25 6.91992 9.91992 5.25 12 5.25Z" fill="black" fill-opacity={!active ? '0.7' : '1'} />
            </svg>
        },
    ]

    const location = useLocation();
    const navigate = useNavigate();

    console.log(location.pathname)
    return (
        <div className="flex items-center justify-between w-full px-8 py-6 fixed bottom-0 bg-white z-50 border-t border-[#0000001A]">
            {navBarList.map((item: any, idx: number) => (
                <div className='relative' key={idx} onClick={() => navigate(item.path)}>
                    {item.element(item.path === location.pathname)}
                    {item.path === location.pathname &&
                        <div className='bg-[#FF5348] w-1 h-1 mx-auto mt-1 rounded-full'></div>
                    }
                </div>
            ))}
        </div>
    )
}
